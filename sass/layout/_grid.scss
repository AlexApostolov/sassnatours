.row {
  // 1140px is a common standard, using max-width, a smaller screen will fill 100% of available space
  max-width: $grid-width;
  // Center the element with automatic left & right margins
  margin: 0 auto;

  // No margin on the last row, i.e. everything except the last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    // Restrict the cards from stretching too much & add some padding to the sides of rows
    max-width: 50rem;
    padding: 0 3rem;
  }

  // Use clearfix mixin
  @include clearfix;

  // Select all classes beginning with "col-"
  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      // Since the columns are no longer side by side in tablet portrait, we don't need the gutter, & should stack it all
      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    // A variable inside of calc() needs to be wrapped with #{}
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
